/* Autogenerated file. Do not edit manually. */
/* eslint-disable */

import {
  utils,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers';
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from '@ethersproject/contracts';
import { BytesLike } from '@ethersproject/bytes';
import { Provider } from '@ethersproject/providers';
import { FunctionFragment, Result } from '@ethersproject/abi';

export interface LeveragerLdotInterface extends utils.Interface {
  contractName: 'LeveragerLdot';
  functions: {
    'DOT()': FunctionFragment;
    'HOMA()': FunctionFragment;
    'LDOT()': FunctionFragment;
    'LENDING_POOL()': FunctionFragment;
    'ORACLE()': FunctionFragment;
    'closeLeverageDOT()': FunctionFragment;
    'executeOperation(address[],uint256[],uint256[],address,bytes)': FunctionFragment;
    'getConfiguration(address)': FunctionFragment;
    'getExchangeRateDOT2LDOT()': FunctionFragment;
    'getExchangeRateLDOT2DOT()': FunctionFragment;
    'getReserveData(address)': FunctionFragment;
    'getStatusAfterLeverageDotFromPositionTransaction(address,uint256,uint256)': FunctionFragment;
    'getStatusAfterLeverageDotTransaction(address,uint256,uint256)': FunctionFragment;
    'leverageDot(uint256,uint256)': FunctionFragment;
    'leverageDotFromPosition(uint256,uint256)': FunctionFragment;
    'lt(address)': FunctionFragment;
    'ltv(address)': FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'DOT', values?: undefined): string;
  encodeFunctionData(functionFragment: 'HOMA', values?: undefined): string;
  encodeFunctionData(functionFragment: 'LDOT', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'LENDING_POOL',
    values?: undefined,
  ): string;
  encodeFunctionData(functionFragment: 'ORACLE', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'closeLeverageDOT',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'executeOperation',
    values: [string[], BigNumberish[], BigNumberish[], string, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'getConfiguration',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getExchangeRateDOT2LDOT',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'getExchangeRateLDOT2DOT',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveData',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getStatusAfterLeverageDotFromPositionTransaction',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'getStatusAfterLeverageDotTransaction',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'leverageDot',
    values: [BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'leverageDotFromPosition',
    values: [BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(functionFragment: 'lt', values: [string]): string;
  encodeFunctionData(functionFragment: 'ltv', values: [string]): string;

  decodeFunctionResult(functionFragment: 'DOT', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'HOMA', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'LDOT', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'LENDING_POOL',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'ORACLE', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'closeLeverageDOT',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'executeOperation',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getConfiguration',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getExchangeRateDOT2LDOT',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getExchangeRateLDOT2DOT',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStatusAfterLeverageDotFromPositionTransaction',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStatusAfterLeverageDotTransaction',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'leverageDot',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'leverageDotFromPosition',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'lt', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'ltv', data: BytesLike): Result;

  events: {};
}

export interface LeveragerLdot extends Contract {
  contractName: 'LeveragerLdot';

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LeveragerLdotInterface;

  functions: {
    DOT(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    'DOT()'(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    HOMA(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    'HOMA()'(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    LDOT(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    'LDOT()'(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    LENDING_POOL(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    'LENDING_POOL()'(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    ORACLE(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    'ORACLE()'(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    closeLeverageDOT(overrides?: Overrides): Promise<ContractTransaction>;

    'closeLeverageDOT()'(overrides?: Overrides): Promise<ContractTransaction>;

    executeOperation(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'executeOperation(address[],uint256[],uint256[],address,bytes)'(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    getConfiguration(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      data: BigNumber;
      0: BigNumber;
    }>;

    'getConfiguration(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      data: BigNumber;
      0: BigNumber;
    }>;

    getExchangeRateDOT2LDOT(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    'getExchangeRateDOT2LDOT()'(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getExchangeRateLDOT2DOT(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    'getExchangeRateLDOT2DOT()'(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    getReserveData(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        configuration: { data: BigNumber; 0: BigNumber };
        liquidityIndex: BigNumber;
        variableBorrowIndex: BigNumber;
        currentLiquidityRate: BigNumber;
        currentVariableBorrowRate: BigNumber;
        currentStableBorrowRate: BigNumber;
        lastUpdateTimestamp: number;
        lTokenAddress: string;
        stableDebtTokenAddress: string;
        variableDebtTokenAddress: string;
        interestRateStrategyAddress: string;
        id: number;
        0: { data: BigNumber; 0: BigNumber };
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: number;
        7: string;
        8: string;
        9: string;
        10: string;
        11: number;
      };
    }>;

    'getReserveData(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        configuration: { data: BigNumber; 0: BigNumber };
        liquidityIndex: BigNumber;
        variableBorrowIndex: BigNumber;
        currentLiquidityRate: BigNumber;
        currentVariableBorrowRate: BigNumber;
        currentStableBorrowRate: BigNumber;
        lastUpdateTimestamp: number;
        lTokenAddress: string;
        stableDebtTokenAddress: string;
        variableDebtTokenAddress: string;
        interestRateStrategyAddress: string;
        id: number;
        0: { data: BigNumber; 0: BigNumber };
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: number;
        7: string;
        8: string;
        9: string;
        10: string;
        11: number;
      };
    }>;

    getStatusAfterLeverageDotFromPositionTransaction(
      account: string,
      borrowAmount: BigNumberish,
      supplyAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      totalCollateralAfterTx: BigNumber;
      totalDebtAfterTx: BigNumber;
      totalCollateralInDotAfterTx: BigNumber;
      totalDebtInDotAfterTx: BigNumber;
      healthFactorAfterTx: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    'getStatusAfterLeverageDotFromPositionTransaction(address,uint256,uint256)'(
      account: string,
      borrowAmount: BigNumberish,
      supplyAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      totalCollateralAfterTx: BigNumber;
      totalDebtAfterTx: BigNumber;
      totalCollateralInDotAfterTx: BigNumber;
      totalDebtInDotAfterTx: BigNumber;
      healthFactorAfterTx: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    getStatusAfterLeverageDotTransaction(
      account: string,
      borrowAmount: BigNumberish,
      repayAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      totalCollateralAfterTx: BigNumber;
      totalDebtAfterTx: BigNumber;
      totalCollateralInDotAfterTx: BigNumber;
      totalDebtInDotAfterTx: BigNumber;
      healthFactorAfterTx: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    'getStatusAfterLeverageDotTransaction(address,uint256,uint256)'(
      account: string,
      borrowAmount: BigNumberish,
      repayAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      totalCollateralAfterTx: BigNumber;
      totalDebtAfterTx: BigNumber;
      totalCollateralInDotAfterTx: BigNumber;
      totalDebtInDotAfterTx: BigNumber;
      healthFactorAfterTx: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    leverageDot(
      borrow_dot_amount: BigNumberish,
      repay_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'leverageDot(uint256,uint256)'(
      borrow_dot_amount: BigNumberish,
      repay_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    leverageDotFromPosition(
      borrow_dot_amount: BigNumberish,
      supply_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'leverageDotFromPosition(uint256,uint256)'(
      borrow_dot_amount: BigNumberish,
      supply_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    lt(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber;
    }>;

    'lt(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber;
    }>;

    ltv(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber;
    }>;

    'ltv(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber;
    }>;
  };

  DOT(overrides?: CallOverrides): Promise<string>;

  'DOT()'(overrides?: CallOverrides): Promise<string>;

  HOMA(overrides?: CallOverrides): Promise<string>;

  'HOMA()'(overrides?: CallOverrides): Promise<string>;

  LDOT(overrides?: CallOverrides): Promise<string>;

  'LDOT()'(overrides?: CallOverrides): Promise<string>;

  LENDING_POOL(overrides?: CallOverrides): Promise<string>;

  'LENDING_POOL()'(overrides?: CallOverrides): Promise<string>;

  ORACLE(overrides?: CallOverrides): Promise<string>;

  'ORACLE()'(overrides?: CallOverrides): Promise<string>;

  closeLeverageDOT(overrides?: Overrides): Promise<ContractTransaction>;

  'closeLeverageDOT()'(overrides?: Overrides): Promise<ContractTransaction>;

  executeOperation(
    assets: string[],
    amounts: BigNumberish[],
    premiums: BigNumberish[],
    initiator: string,
    params: BytesLike,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'executeOperation(address[],uint256[],uint256[],address,bytes)'(
    assets: string[],
    amounts: BigNumberish[],
    premiums: BigNumberish[],
    initiator: string,
    params: BytesLike,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  getConfiguration(
    asset: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  'getConfiguration(address)'(
    asset: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  getExchangeRateDOT2LDOT(overrides?: CallOverrides): Promise<BigNumber>;

  'getExchangeRateDOT2LDOT()'(overrides?: CallOverrides): Promise<BigNumber>;

  getExchangeRateLDOT2DOT(overrides?: CallOverrides): Promise<BigNumber>;

  'getExchangeRateLDOT2DOT()'(overrides?: CallOverrides): Promise<BigNumber>;

  getReserveData(
    asset: string,
    overrides?: CallOverrides,
  ): Promise<{
    configuration: { data: BigNumber; 0: BigNumber };
    liquidityIndex: BigNumber;
    variableBorrowIndex: BigNumber;
    currentLiquidityRate: BigNumber;
    currentVariableBorrowRate: BigNumber;
    currentStableBorrowRate: BigNumber;
    lastUpdateTimestamp: number;
    lTokenAddress: string;
    stableDebtTokenAddress: string;
    variableDebtTokenAddress: string;
    interestRateStrategyAddress: string;
    id: number;
    0: { data: BigNumber; 0: BigNumber };
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: number;
    7: string;
    8: string;
    9: string;
    10: string;
    11: number;
  }>;

  'getReserveData(address)'(
    asset: string,
    overrides?: CallOverrides,
  ): Promise<{
    configuration: { data: BigNumber; 0: BigNumber };
    liquidityIndex: BigNumber;
    variableBorrowIndex: BigNumber;
    currentLiquidityRate: BigNumber;
    currentVariableBorrowRate: BigNumber;
    currentStableBorrowRate: BigNumber;
    lastUpdateTimestamp: number;
    lTokenAddress: string;
    stableDebtTokenAddress: string;
    variableDebtTokenAddress: string;
    interestRateStrategyAddress: string;
    id: number;
    0: { data: BigNumber; 0: BigNumber };
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: number;
    7: string;
    8: string;
    9: string;
    10: string;
    11: number;
  }>;

  getStatusAfterLeverageDotFromPositionTransaction(
    account: string,
    borrowAmount: BigNumberish,
    supplyAmount: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    totalCollateralAfterTx: BigNumber;
    totalDebtAfterTx: BigNumber;
    totalCollateralInDotAfterTx: BigNumber;
    totalDebtInDotAfterTx: BigNumber;
    healthFactorAfterTx: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  'getStatusAfterLeverageDotFromPositionTransaction(address,uint256,uint256)'(
    account: string,
    borrowAmount: BigNumberish,
    supplyAmount: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    totalCollateralAfterTx: BigNumber;
    totalDebtAfterTx: BigNumber;
    totalCollateralInDotAfterTx: BigNumber;
    totalDebtInDotAfterTx: BigNumber;
    healthFactorAfterTx: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  getStatusAfterLeverageDotTransaction(
    account: string,
    borrowAmount: BigNumberish,
    repayAmount: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    totalCollateralAfterTx: BigNumber;
    totalDebtAfterTx: BigNumber;
    totalCollateralInDotAfterTx: BigNumber;
    totalDebtInDotAfterTx: BigNumber;
    healthFactorAfterTx: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  'getStatusAfterLeverageDotTransaction(address,uint256,uint256)'(
    account: string,
    borrowAmount: BigNumberish,
    repayAmount: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    totalCollateralAfterTx: BigNumber;
    totalDebtAfterTx: BigNumber;
    totalCollateralInDotAfterTx: BigNumber;
    totalDebtInDotAfterTx: BigNumber;
    healthFactorAfterTx: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  leverageDot(
    borrow_dot_amount: BigNumberish,
    repay_dot_amount: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'leverageDot(uint256,uint256)'(
    borrow_dot_amount: BigNumberish,
    repay_dot_amount: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  leverageDotFromPosition(
    borrow_dot_amount: BigNumberish,
    supply_dot_amount: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'leverageDotFromPosition(uint256,uint256)'(
    borrow_dot_amount: BigNumberish,
    supply_dot_amount: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  lt(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

  'lt(address)'(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

  ltv(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

  'ltv(address)'(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    DOT(overrides?: CallOverrides): Promise<string>;

    'DOT()'(overrides?: CallOverrides): Promise<string>;

    HOMA(overrides?: CallOverrides): Promise<string>;

    'HOMA()'(overrides?: CallOverrides): Promise<string>;

    LDOT(overrides?: CallOverrides): Promise<string>;

    'LDOT()'(overrides?: CallOverrides): Promise<string>;

    LENDING_POOL(overrides?: CallOverrides): Promise<string>;

    'LENDING_POOL()'(overrides?: CallOverrides): Promise<string>;

    ORACLE(overrides?: CallOverrides): Promise<string>;

    'ORACLE()'(overrides?: CallOverrides): Promise<string>;

    closeLeverageDOT(overrides?: CallOverrides): Promise<boolean>;

    'closeLeverageDOT()'(overrides?: CallOverrides): Promise<boolean>;

    executeOperation(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    'executeOperation(address[],uint256[],uint256[],address,bytes)'(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    getConfiguration(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getConfiguration(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getExchangeRateDOT2LDOT(overrides?: CallOverrides): Promise<BigNumber>;

    'getExchangeRateDOT2LDOT()'(overrides?: CallOverrides): Promise<BigNumber>;

    getExchangeRateLDOT2DOT(overrides?: CallOverrides): Promise<BigNumber>;

    'getExchangeRateLDOT2DOT()'(overrides?: CallOverrides): Promise<BigNumber>;

    getReserveData(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      configuration: { data: BigNumber; 0: BigNumber };
      liquidityIndex: BigNumber;
      variableBorrowIndex: BigNumber;
      currentLiquidityRate: BigNumber;
      currentVariableBorrowRate: BigNumber;
      currentStableBorrowRate: BigNumber;
      lastUpdateTimestamp: number;
      lTokenAddress: string;
      stableDebtTokenAddress: string;
      variableDebtTokenAddress: string;
      interestRateStrategyAddress: string;
      id: number;
      0: { data: BigNumber; 0: BigNumber };
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: number;
      7: string;
      8: string;
      9: string;
      10: string;
      11: number;
    }>;

    'getReserveData(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<{
      configuration: { data: BigNumber; 0: BigNumber };
      liquidityIndex: BigNumber;
      variableBorrowIndex: BigNumber;
      currentLiquidityRate: BigNumber;
      currentVariableBorrowRate: BigNumber;
      currentStableBorrowRate: BigNumber;
      lastUpdateTimestamp: number;
      lTokenAddress: string;
      stableDebtTokenAddress: string;
      variableDebtTokenAddress: string;
      interestRateStrategyAddress: string;
      id: number;
      0: { data: BigNumber; 0: BigNumber };
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: number;
      7: string;
      8: string;
      9: string;
      10: string;
      11: number;
    }>;

    getStatusAfterLeverageDotFromPositionTransaction(
      account: string,
      borrowAmount: BigNumberish,
      supplyAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      totalCollateralAfterTx: BigNumber;
      totalDebtAfterTx: BigNumber;
      totalCollateralInDotAfterTx: BigNumber;
      totalDebtInDotAfterTx: BigNumber;
      healthFactorAfterTx: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    'getStatusAfterLeverageDotFromPositionTransaction(address,uint256,uint256)'(
      account: string,
      borrowAmount: BigNumberish,
      supplyAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      totalCollateralAfterTx: BigNumber;
      totalDebtAfterTx: BigNumber;
      totalCollateralInDotAfterTx: BigNumber;
      totalDebtInDotAfterTx: BigNumber;
      healthFactorAfterTx: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    getStatusAfterLeverageDotTransaction(
      account: string,
      borrowAmount: BigNumberish,
      repayAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      totalCollateralAfterTx: BigNumber;
      totalDebtAfterTx: BigNumber;
      totalCollateralInDotAfterTx: BigNumber;
      totalDebtInDotAfterTx: BigNumber;
      healthFactorAfterTx: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    'getStatusAfterLeverageDotTransaction(address,uint256,uint256)'(
      account: string,
      borrowAmount: BigNumberish,
      repayAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      totalCollateralAfterTx: BigNumber;
      totalDebtAfterTx: BigNumber;
      totalCollateralInDotAfterTx: BigNumber;
      totalDebtInDotAfterTx: BigNumber;
      healthFactorAfterTx: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    leverageDot(
      borrow_dot_amount: BigNumberish,
      repay_dot_amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    'leverageDot(uint256,uint256)'(
      borrow_dot_amount: BigNumberish,
      repay_dot_amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    leverageDotFromPosition(
      borrow_dot_amount: BigNumberish,
      supply_dot_amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    'leverageDotFromPosition(uint256,uint256)'(
      borrow_dot_amount: BigNumberish,
      supply_dot_amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    lt(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    'lt(address)'(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    ltv(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    'ltv(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    DOT(overrides?: CallOverrides): Promise<BigNumber>;

    'DOT()'(overrides?: CallOverrides): Promise<BigNumber>;

    HOMA(overrides?: CallOverrides): Promise<BigNumber>;

    'HOMA()'(overrides?: CallOverrides): Promise<BigNumber>;

    LDOT(overrides?: CallOverrides): Promise<BigNumber>;

    'LDOT()'(overrides?: CallOverrides): Promise<BigNumber>;

    LENDING_POOL(overrides?: CallOverrides): Promise<BigNumber>;

    'LENDING_POOL()'(overrides?: CallOverrides): Promise<BigNumber>;

    ORACLE(overrides?: CallOverrides): Promise<BigNumber>;

    'ORACLE()'(overrides?: CallOverrides): Promise<BigNumber>;

    closeLeverageDOT(overrides?: Overrides): Promise<BigNumber>;

    'closeLeverageDOT()'(overrides?: Overrides): Promise<BigNumber>;

    executeOperation(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'executeOperation(address[],uint256[],uint256[],address,bytes)'(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    getConfiguration(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getConfiguration(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getExchangeRateDOT2LDOT(overrides?: CallOverrides): Promise<BigNumber>;

    'getExchangeRateDOT2LDOT()'(overrides?: CallOverrides): Promise<BigNumber>;

    getExchangeRateLDOT2DOT(overrides?: CallOverrides): Promise<BigNumber>;

    'getExchangeRateLDOT2DOT()'(overrides?: CallOverrides): Promise<BigNumber>;

    getReserveData(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveData(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getStatusAfterLeverageDotFromPositionTransaction(
      account: string,
      borrowAmount: BigNumberish,
      supplyAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getStatusAfterLeverageDotFromPositionTransaction(address,uint256,uint256)'(
      account: string,
      borrowAmount: BigNumberish,
      supplyAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getStatusAfterLeverageDotTransaction(
      account: string,
      borrowAmount: BigNumberish,
      repayAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getStatusAfterLeverageDotTransaction(address,uint256,uint256)'(
      account: string,
      borrowAmount: BigNumberish,
      repayAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    leverageDot(
      borrow_dot_amount: BigNumberish,
      repay_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'leverageDot(uint256,uint256)'(
      borrow_dot_amount: BigNumberish,
      repay_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    leverageDotFromPosition(
      borrow_dot_amount: BigNumberish,
      supply_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'leverageDotFromPosition(uint256,uint256)'(
      borrow_dot_amount: BigNumberish,
      supply_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    lt(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    'lt(address)'(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    ltv(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    'ltv(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DOT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'DOT()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    HOMA(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'HOMA()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    LDOT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'LDOT()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    LENDING_POOL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'LENDING_POOL()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ORACLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'ORACLE()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    closeLeverageDOT(overrides?: Overrides): Promise<PopulatedTransaction>;

    'closeLeverageDOT()'(overrides?: Overrides): Promise<PopulatedTransaction>;

    executeOperation(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'executeOperation(address[],uint256[],uint256[],address,bytes)'(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    getConfiguration(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getConfiguration(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getExchangeRateDOT2LDOT(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getExchangeRateDOT2LDOT()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getExchangeRateLDOT2DOT(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getExchangeRateLDOT2DOT()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveData(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveData(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStatusAfterLeverageDotFromPositionTransaction(
      account: string,
      borrowAmount: BigNumberish,
      supplyAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStatusAfterLeverageDotFromPositionTransaction(address,uint256,uint256)'(
      account: string,
      borrowAmount: BigNumberish,
      supplyAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStatusAfterLeverageDotTransaction(
      account: string,
      borrowAmount: BigNumberish,
      repayAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStatusAfterLeverageDotTransaction(address,uint256,uint256)'(
      account: string,
      borrowAmount: BigNumberish,
      repayAmount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    leverageDot(
      borrow_dot_amount: BigNumberish,
      repay_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'leverageDot(uint256,uint256)'(
      borrow_dot_amount: BigNumberish,
      repay_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    leverageDotFromPosition(
      borrow_dot_amount: BigNumberish,
      supply_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'leverageDotFromPosition(uint256,uint256)'(
      borrow_dot_amount: BigNumberish,
      supply_dot_amount: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    lt(asset: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'lt(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    ltv(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'ltv(address)'(
      asset: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
